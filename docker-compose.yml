services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./services/api/app/models.sql:/docker-entrypoint-initdb.d/00_models.sql:ro

  opensearch:
    image: opensearchproject/opensearch:2.14.0
    environment:
      discovery.type: single-node
      plugins.security.disabled: "true"
      OPENSEARCH_JAVA_OPTS: ${OPENSEARCH_JAVA_OPTS}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports: ["9200:9200"]

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports: ["9000:9000", "9001:9001"]
    volumes:
      - minio:/data

  redis:
    image: redis:7
    ports: ["6379:6379"]

  graph-engine:
    build: ./services/graph_engine
    ports: ["50061:50061"]

  api:
    build: ./services/api
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      OPENSEARCH_URL: http://opensearch:9200
      REDIS_URL: redis://redis:6379/0
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      GRAPH_ENGINE_ADDR: graph-engine:50061
    ports: ["8080:8080"]
    depends_on:
      - postgres
      - opensearch
      - redis
      - minio
      - graph-engine

  worker:
    image: graph-rag-news-explorer-api:latest   # reuse the API image we build once
    command: bash -lc "rq worker default"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - api

  frontend:
    build: ./services/frontend
    ports: ["3000:3000"]
    environment:
     - NEXT_PUBLIC_API_URL=http://localhost:8080
    depends_on:
      - api


volumes:
  pgdata: {}
  minio: {}
